-if @show_all
  -title "Stats & Results"
  = render "schedules_and_results", mode: 'results'
-else
  -if @league.id == 4
    -title "Insurance Basketball League #{@season.name} Stats"
    %h1 Insurance Basketball League #{@season.name} Stats
  -else
    -title "#{@season.name} - #{@league.name} Stats"
    %h1 #{@season.name} - #{@league.name} Stats
    .col-lg-4.col-md-6.col-xs-12{:style => "padding:15px 0"}
      %form{action: "#{results_path}", method: "get", style:'font-weight:bold;'}
        Season:
        =select_tag "season", options_from_collection_for_select(@seasons, "id", "name", params[:season].to_i), { onchange: 'this.form.submit();', style: 'font-size:12px;' }
        =hidden_field_tag "league", @league.id
    %p 
      At ABC Hoops, stats are very important to us.  We have three dedicated stat keepers at each game to make sure everything is recorded as accurately as possible.  For the week's scores, go to the 
      = succeed "." do
        %a{href:schedules_path(season:@season.id, league:@league.id)} Schedule Page
    -if lookup_context.template_exists?("bracket_#{@league.name.downcase}_#{@season.id}", "stats", true)
      =render "bracket_#{@league.name.downcase}_#{@season.id}"
    .row
      .col-md-12.col-lg-12
        %h1{:style => "margin-top:0px;border-bottom: solid 1px #C0C0C0;padding-bottom:5px;margin-top:15px"} Standings
        .full-standings-container
          %table.table.responsive.table-striped.table-stats.sortable.table-hover.full-standings{cellpadding:"3", cellspacing:"0", border:"0", width:"550"}
            %thead
              %tr
                %th Team
                %th W
                %th L
                %th PF
                %th PA
                %th Diff
                %th Strk
            %tbody
              - divisions = @team_spots.group_by { |ts| ts.division }
              - no_division = divisions.extract!(nil)
              - divisions.keys.sort.each_with_index do |division|
                %tr.even.divisionName
                  %td.team.r-lock= division.name
                  %td  
                  %td  
                  %td  
                  %td  
                  %td  
                  %td
                - division_team_spots = division.team_spots
                - division_team_spots.sort_by{|ts| [ts.win_pct, ts.wins, -(ts.losses), ts.point_diff]}.reverse!.each do |ts|
                  %tr
                    %td.team.r-lock
                      %a{href:stats_team_path(ts.team)}= ts.team.name
                    %td= ts.wins
                    %td= ts.losses
                    %td= ts.points_for
                    %td= ts.points_against
                    %td= ts.point_diff
                    %td= ts.streak
                -reset_cycle
              - team_spot_no_division = no_division[nil]
              - if team_spot_no_division
                - team_spot_no_division.sort_by{|ts| [ts.win_pct, ts.wins, -(ts.losses), ts.point_diff]}.reverse!.each do |ts|
                  %tr
                    %td.team.r-lock
                      %a{href:stats_team_path(ts.team)}= ts.team.name
                    %td= ts.wins
                    %td= ts.losses
                    %td= ts.points_for
                    %td= ts.points_against
                    %td= ts.point_diff
                    %td= ts.streak
      .col-md-12.col-lg-12
        %h1 Leaderboard
        .row
          .col-lg-6.button-container
            .main-button.block
              %a{:href => "#pergame"} Per Game
          .col-lg-6.button-container
            .main-button.block
              %a{:href => "#totals"} Totals
        #pergame
          .row.equal.leaderboard-row
            =render "leaderboard_entry", headers: ['Points Per Game'], entries: [@leaderboard[:points]], precisions: [1]
            =render "leaderboard_entry", headers: ['Rebounds Per Game'], entries: [@leaderboard[:rebounds]], precisions: [1]
            =render "leaderboard_entry", headers: ['Assists Per Game'], entries: [@leaderboard[:assists]], precisions: [1]
            =render "leaderboard_entry", headers: ['Blocks Per Game'], entries: [@leaderboard[:blocks]], precisions: [1]
            =render "leaderboard_entry", headers: ['FG%'], entries: [@leaderboard[:fgpct]], precisions: [3]
            =render "leaderboard_entry", headers: ['Steals Per Game'], entries: [@leaderboard[:steals]], precisions: [1]
            =render "leaderboard_entry", headers: ['3P%'], entries: [@leaderboard[:threepct]], precisions: [3]
            =render "leaderboard_entry", headers: ['FT%'], entries: [@leaderboard[:ftpct]], precisions: [3]
            =render "leaderboard_entry", headers: ['Free Throws Per Game'], entries: [@leaderboard[:ftm]], precisions: [1]
        #totals
          .row.equal.leaderboard-row
            =render "leaderboard_entry", headers: ['Points'], entries: [@leaderboard_totals[:points]], precisions: [1]
            =render "leaderboard_entry", headers: ['Rebounds'], entries: [@leaderboard_totals[:rebounds]], precisions: [1]
            =render "leaderboard_entry", headers: ['Assists'], entries: [@leaderboard_totals[:assists]], precisions: [1]
            =render "leaderboard_entry", headers: ['Blocks'], entries: [@leaderboard_totals[:blocks]], precisions: [1]
            =render "leaderboard_entry", headers: ['FG%'], entries: [@leaderboard_totals[:fgpct]], precisions: [3]
            =render "leaderboard_entry", headers: ['Steals'], entries: [@leaderboard_totals[:steals]], precisions: [1]
            =render "leaderboard_entry", headers: ['3P%'], entries: [@leaderboard_totals[:threepct]], precisions: [3]
            =render "leaderboard_entry", headers: ['FT%'], entries: [@leaderboard_totals[:ftpct]], precisions: [3]
            =render "leaderboard_entry", headers: ['Free Throws'], entries: [@leaderboard_totals[:ftm]], precisions: [1]
        %p.terms{style:"margin-top:10px"}
          Minimum 4 GP for all stats. Minimum 8 FGA per game for FG%, 3 3PA per game for 3P%, and 3 FTA per game for FT%.
      .col-md-12.col-lg-12
        %h1 Team Stats
        .full-team-stats-container
          %table.responsive.table-striped.table-stats.full-boxscore.sortable.table-hover.team-stats
            %thead
              %tr
                %th.r-lock Team
                %th PPG
                %th FGM-A
                %th FG%
                %th 3PM-A
                %th 3P%
                %th FTM-A
                %th FT%
                %th O
                %th D
                %th TRPG
                %th APG
                %th SPG
                %th BPG
                %th FPG
            %tbody
            -@team_stats.each do |stat|
              %tr
                %td.r-lock
                  %a{href:stats_team_path(stat.team)}= stat.team.abbreviation
                %td #{number_with_precision(stat.points, precision: 1)}
                %td #{number_with_precision(stat.fgm, precision: 1)}-#{number_with_precision(stat.fga, precision: 1)}
                %td= number_with_precision(stat.fgpct, precision: 3)
                %td #{number_with_precision(stat.threem, precision: 1)}-#{number_with_precision(stat.threea, precision: 1)}
                %td= number_with_precision(stat.threepct, precision: 3)
                %td #{number_with_precision(stat.ftm, precision: 1)}-#{number_with_precision(stat.fta, precision: 1)}
                %td= number_with_precision(stat.ftpct, precision: 3)
                %td= number_with_precision(stat.orb, precision: 1)
                %td= number_with_precision(stat.drb, precision: 1)
                %td= number_with_precision(stat.trb, precision: 1)
                %td= number_with_precision(stat.ast, precision: 1)
                %td= number_with_precision(stat.stl, precision: 1)
                %td= number_with_precision(stat.blk, precision: 1)
                %td= number_with_precision(stat.fl, precision: 1)
            %tfoot
              -stat = average_stat_lines(@team_stats)
              %tr
                %td.r-lock Avg
                %td= number_with_precision(stat.points, precision: 1)
                %td #{number_with_precision(stat.fgm, precision: 1)}-#{number_with_precision(stat.fga, precision: 1)}
                %td= number_with_precision(stat.fgpct, precision: 3)
                %td #{number_with_precision(stat.threem, precision: 1)}-#{number_with_precision(stat.threea, precision: 1)}
                %td= number_with_precision(stat.threepct, precision: 3)
                %td #{number_with_precision(stat.ftm, precision: 1)}-#{number_with_precision(stat.fta, precision: 1)}
                %td= number_with_precision(stat.ftpct, precision: 3)
                %td= number_with_precision(stat.orb, precision: 1)
                %td= number_with_precision(stat.drb, precision: 1)
                %td= number_with_precision(stat.trb, precision: 1)
                %td= number_with_precision(stat.ast, precision: 1)
                %td= number_with_precision(stat.stl, precision: 1)
                %td= number_with_precision(stat.blk, precision: 1)
                %td= number_with_precision(stat.fl, precision: 1)
        =render "glossary"
    = javascript_include_tag "activatables"
    %script{type: "text/javascript"}
      activatables('page', ["pergame", "totals"])
