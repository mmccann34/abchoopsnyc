-if @show_all
  -title "Stats & Results"
  = render "schedules_and_results", mode: 'results'
-else
  -if @league.id == 4
    -title "Insurance Basketball League #{@season.name} Stats"
    %h1 Insurance Basketball League #{@season.name} Stats
  -else
    -title "#{@season.name} - #{@league.name} Stats"
    %h1 #{@season.name} - #{@league.name} Stats
  / %form{action: "#{results_path}", method: "get", style:'font-weight:bold;'}
  /   Season:
  /   =select_tag "season", options_from_collection_for_select(@seasons, "id", "name", params[:season].to_i), { onchange: 'this.form.submit();', style: 'font-size:12px;' }
  /   =hidden_field_tag "league", @league.id
  %p 
    At ABC Hoops NYC, stats are very important to us.  We have three dedicated stat keepers at each game to make sure everything is recorded as accurately as possible.  For the week's scores, go to the 
    = succeed "." do
      %a{href:schedules_path(season:@season.id, league:@league.id)} Schedule Page
  %h3 &nbsp;
  -if lookup_context.template_exists?("bracket_#{@league.name.downcase}_#{@season.id}", "stats", true)
    =render "bracket_#{@league.name.downcase}_#{@season.id}"
  %h1
    %a#standings{name:"standings"}
    Standings
  %p.hl
  %table.statTableTeamStats.maintablestand{cellpadding:"3", cellspacing:"0", border:"0", width:"550", style:"margin: 0 auto;"}
    %thead.statTableHead
      %tr
        %th Team
        %th{width:"50"} W
        %th{width:"50"} L
        %th{width:"50"} PF
        %th{width:"50"} PA
        %th{width:"50"} Diff
        %th{width:"50"} Strk
    %tbody
      - divisions = @team_spots.group_by { |ts| ts.division }
      - no_division = divisions.extract!(nil)
      - divisions.keys.sort.each_with_index do |division|
        %tr.even.divisionName
          %td.team{colspan:"7"}= division.name
        - division_team_spots = division.team_spots
        - division_team_spots.sort_by{|ts| [ts.win_pct, ts.wins, -(ts.losses), ts.point_diff]}.reverse!.each do |ts|
          %tr{class: "#{cycle('odd', 'even')}"}
            %td.team
              %a{href:stats_team_path(ts.team)}= ts.team.name
            %td= ts.wins
            %td= ts.losses
            %td= ts.points_for
            %td= ts.points_against
            %td= ts.point_diff
            %td= ts.streak
        -reset_cycle
      - team_spot_no_division = no_division[nil]
      - if team_spot_no_division
        - team_spot_no_division.sort_by{|ts| [ts.win_pct, ts.wins, -(ts.losses), ts.point_diff]}.reverse!.each do |ts|
          %tr{class: "#{cycle('odd', 'even')}"}
            %td.team
              %a{href:stats_team_path(ts.team)}= ts.team.name
            %td= ts.wins
            %td= ts.losses
            %td= ts.points_for
            %td= ts.points_against
            %td= ts.point_diff
            %td= ts.streak
  %h3 &nbsp;
  %h1
    %a#leaderboard{name:"leaderboard"}
    Leaderboard
  %p.hl
  %ul#playerprof1
    %li.stat_types
      %a{class:"profbutton", href:"#leaderboard_pergame" } Per Game
    %li.stat_types
      %a{class:"profbutton", href:"#leaderboard_totals" } Totals
  #leaderboard_pergame.profstats
    %table.statTableTeamStats.maintablestand{cellpadding:"3", cellspacing:"0", border:"0", width:"800"}
      %colgroup
        %col{ span:"1", style:"width: 170px;" }
        %col{ span:"1", style:"width: 50px;" }
        %col{ span:"1", style:"width: 35px;" }
        %col{ span:"1", style:"width: 15px;" }
        %col{ span:"1", style:"width: 170px;" }
        %col{ span:"1", style:"width: 50px;" }
        %col{ span:"1", style:"width: 35px;" }
        %col{ span:"1", style:"width: 15px;" }
        %col{ span:"1", style:"width: 170px;" }
        %col{ span:"1", style:"width: 50px;" }
        %col{ span:"1", style:"width: 35px;" }
      %tbody
        =render "leaderboard_entry", headers: ['Points Per Game', 'Rebounds Per Game', 'Assists Per Game'], entries: [@leaderboard[:points], @leaderboard[:rebounds], @leaderboard[:assists]], precisions: [1, 1, 1]
        =render "leaderboard_entry", headers: ['Blocks Per Game', 'FG%', 'Steals Per Game'], entries: [@leaderboard[:blocks], @leaderboard[:fgpct], @leaderboard[:steals]], precisions: [1, 3, 1]
        =render "leaderboard_entry", headers: ['3P%', 'FT%', 'Free Throws Per Game'], entries: [@leaderboard[:threepct], @leaderboard[:ftpct], @leaderboard[:ftm]], precisions: [3, 3, 1]
  #leaderboard_totals.profstats
    %table.statTableTeamStats.maintablestand{cellpadding:"3", cellspacing:"0", border:"0", width:"800"}
      %colgroup
        %col{ span:"1", style:"width: 170px;" }
        %col{ span:"1", style:"width: 50px;" }
        %col{ span:"1", style:"width: 35px;" }
        %col{ span:"1", style:"width: 15px;" }
        %col{ span:"1", style:"width: 170px;" }
        %col{ span:"1", style:"width: 50px;" }
        %col{ span:"1", style:"width: 35px;" }
        %col{ span:"1", style:"width: 15px;" }
        %col{ span:"1", style:"width: 170px;" }
        %col{ span:"1", style:"width: 50px;" }
        %col{ span:"1", style:"width: 35px;" }
      %tbody
        =render "leaderboard_entry", headers: ['Points', 'Rebounds', 'Assists'], entries: [@leaderboard_totals[:points], @leaderboard_totals[:rebounds], @leaderboard_totals[:assists]], precisions: [1, 1, 1]
        =render "leaderboard_entry", headers: ['Blocks', 'FG%', 'Steals'], entries: [@leaderboard_totals[:blocks], @leaderboard_totals[:fgpct], @leaderboard_totals[:steals]], precisions: [1, 3, 1]
        =render "leaderboard_entry", headers: ['3P%', 'FT%', 'Free Throws'], entries: [@leaderboard_totals[:threepct], @leaderboard_totals[:ftpct], @leaderboard_totals[:ftm]], precisions: [3, 3, 1]
  %br
  %p.terms Minimum 4 GP for all stats.  Minimum 8 FGA per game for FG%, 3 3PA per game for 3P%, and 3 FTA per game for FT%.
  %h3 &nbsp;
  %h1 Team Stats
  %p.hl
  %table.statTableTeamStats.sortable{border:"0", width:"800", cellpadding:"3", cellspacing:"0"}
    %thead.statTableHead
      %tr
        %th Team
        %th PPG
        %th FGM-A
        %th FG%
        %th 3PM-A
        %th 3P%
        %th FTM-A
        %th FT%
        %th O
        %th D
        %th TRPG
        %th APG
        %th SPG
        %th BPG
        %th FPG
    %tbody
      -@team_stats.each do |stat|
        %tr{class: "#{cycle('odd', 'even')}"}
          %td{width:"65"}
            %strong
            %a{href:stats_team_path(stat.team)}= stat.team.abbreviation
          %td.lline= number_with_precision(stat.points, precision: 1)
          %td.lline #{number_with_precision(stat.fgm, precision: 1)}-#{number_with_precision(stat.fga, precision: 1)}
          %td= number_with_precision(stat.fgpct, precision: 3)
          %td.lline #{number_with_precision(stat.threem, precision: 1)}-#{number_with_precision(stat.threea, precision: 1)}
          %td= number_with_precision(stat.threepct, precision: 3)
          %td.lline #{number_with_precision(stat.ftm, precision: 1)}-#{number_with_precision(stat.fta, precision: 1)}
          %td= number_with_precision(stat.ftpct, precision: 3)
          %td.lline= number_with_precision(stat.orb, precision: 1)
          %td= number_with_precision(stat.drb, precision: 1)
          %td= number_with_precision(stat.trb, precision: 1)
          %td.lline= number_with_precision(stat.ast, precision: 1)
          %td.lline= number_with_precision(stat.stl, precision: 1)
          %td.lline= number_with_precision(stat.blk, precision: 1)
          %td.lline= number_with_precision(stat.fl, precision: 1)
    %tfoot
      -stat = average_stat_lines(@team_stats)
      %tr.stattotal
        %td.team &nbsp;&nbsp;Lg Avg
        %td.lline= number_with_precision(stat.points, precision: 1)
        %td.lline #{number_with_precision(stat.fgm, precision: 1)}-#{number_with_precision(stat.fga, precision: 1)}
        %td= number_with_precision(stat.fgpct, precision: 3)
        %td.lline #{number_with_precision(stat.threem, precision: 1)}-#{number_with_precision(stat.threea, precision: 1)}
        %td= number_with_precision(stat.threepct, precision: 3)
        %td.lline #{number_with_precision(stat.ftm, precision: 1)}-#{number_with_precision(stat.fta, precision: 1)}
        %td= number_with_precision(stat.ftpct, precision: 3)
        %td.lline= number_with_precision(stat.orb, precision: 1)
        %td= number_with_precision(stat.drb, precision: 1)
        %td= number_with_precision(stat.trb, precision: 1)
        %td.lline= number_with_precision(stat.ast, precision: 1)
        %td.lline= number_with_precision(stat.stl, precision: 1)
        %td.lline= number_with_precision(stat.blk, precision: 1)
        %td.lline= number_with_precision(stat.fl, precision: 1)

= javascript_include_tag "activatables"
%script{type: "text/javascript"}
  activatables('page', ['leaderboard_pergame', 'leaderboard_totals']);